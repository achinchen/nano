name: Pull Request CI

on:
  pull_request:

env:
  HUSKY: 0

jobs:
  main:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Check affected base commit SHA
        run: |
          MAIN_HEAD_COMMIT_SHA=$(git rev-parse remotes/origin/main)
          PR_HEAD_COMMIT_SHA=${{ github.event.pull_request.head.sha }}

          echo "BASE_COMMIT_SHA=${MAIN_HEAD_COMMIT_SHA}" >> $GITHUB_ENV
          echo "HEAD_COMMIT_SHA=${PR_HEAD_COMMIT_SHA}" >> $GITHUB_ENV
      
      - name: Print commit SHA
        run: |
          echo "Base commit sha: ${{ env.BASE_COMMIT_SHA }}"
          echo "Head commit sha: ${{ env.HEAD_COMMIT_SHA }}"

      - name: Setup Node
        uses: actions/setup-node@v3
        id: versions
        with:
          node-version: 18

      - name: Setup yarn
        run: npm install -g yarn

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
          
      - name: Use the node_modules cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node-${{ steps.versions.outputs.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ steps.versions.outputs.node-version }}
            
      - name: Install dependencies
        run: |
          echo "Running yarn install --frozen-lockfile"
          yarn install --frozen-lockfile

      - name: Run lint, test and build
        run: |
          npx nx affected -t lint --parallel 3 --base=${{env.BASE_COMMIT_SHA}} --head=${{env.HEAD_COMMIT_SHA}}
          npx nx affected -t test --parallel 3 --configuration ci --base=${{env.BASE_COMMIT_SHA}} --head=${{env.HEAD_COMMIT_SHA}}
          npx nx affected -t build --parallel 3 --base=${{env.BASE_COMMIT_SHA}} --head=${{env.HEAD_COMMIT_SHA}}